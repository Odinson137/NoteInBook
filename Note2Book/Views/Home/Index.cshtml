@model Note2Book.ViewModels.HomeViewModel

@functions {
    public class Тest
    {
        public DateTime Date { get; set; }
        public int Count { get; set; }
    }
}

@{
    ViewData["Title"] = "Home Page";
}

<link rel="stylesheet" type="text/css" href="//cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.css"/>
<link rel="stylesheet" type="text/css" href="//cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick-theme.css"/>
<script type="text/javascript" src="//code.jquery.com/jquery-1.11.0.min.js"></script>
<script type="text/javascript" src="//code.jquery.com/jquery-migrate-1.2.1.min.js"></script>
<script type="text/javascript" src="//cdn.jsdelivr.net/npm/slick-carousel@1.8.1/slick/slick.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-chart-matrix"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns@latest"></script>


<div class="text-center">
    <h2>Избранные книги</h2>
    <div class="favorite-slider">
        @foreach (var favorite in Model.FavoriteBooks)
        {
            <div class="slider-item">
                <img src="@favorite.Image" style="width: 150px; height: 200px;">
                <p>@favorite.Author.LastName @favorite.Author.Name</p>
            </div>
        }
    </div>
</div>

<div class="text-center">
    <h2>Календарная матрица</h2>
    <canvas id="calendarChart"></canvas>
</div>

@{
    var currentDate = DateTime.Now;
    var firstDayOfMonth = new DateTime(currentDate.Year, currentDate.Month, 1);
    var daysInMonth = DateTime.DaysInMonth(currentDate.Year, currentDate.Month);

    var allDays = Enumerable.Range(0, daysInMonth)
        .Select(i => new Тest { Date = firstDayOfMonth.AddDays(i), Count = 0 })
        .ToList();

    foreach (var activity in Model.Activities)
    {
        var matchingDay = allDays.FirstOrDefault(d => d.Date.Date == activity.CreatedAt.Date);
        if (matchingDay != null)
        {
            matchingDay.Count += 1;
        }
    }

    var matrixData = allDays.Select((d) => new
    {
        x = (int)d.Date.DayOfWeek, // Столбец: День недели (0 - воскресенье, 6 - суббота)
        y = (int)((d.Date.Day - 1 + (int)firstDayOfMonth.DayOfWeek) / 7), // Строка: Неделя месяца
        v = d.Count, // Количество активностей
        date = d.Date.ToString("dd.MM") // Дата для всплывающих подсказок
    }).ToList();
}

<script>
    const matrixData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(matrixData));
    const ctx = document.getElementById('calendarChart').getContext('2d');
    const calendarChart = new Chart(ctx, {
        type: 'matrix',
        data: {
            datasets: [{
                label: 'Яна',
                data: matrixData,
                backgroundColor: (context) => {
                    const value = context.dataset.data[context.dataIndex].v;
                    return value === 0
                        ? 'rgba(200, 200, 200, 0.8)' // Серый цвет для дней без активности
                        : value > 5
                            ? 'rgba(34, 139, 34, 0.8)' // Зелёный для активных дней
                            : 'rgba(144, 238, 144, 0.8)'; // Светло-зелёный для средней активности
                },
                borderColor: 'rgba(0, 0, 0, 0.1)',
                borderWidth: 0,
                width: 95, // Ширина прямоугольников
                height: 50 // Высота прямоугольников
            }]
        },
        options: {
            plugins: {
                tooltip: {
                    callbacks: {
                        title: (tooltipItems) => `Дата: ${tooltipItems[0].raw.date}`,
                        label: (tooltipItem) => `Активности: ${tooltipItem.raw.v}`
                    }
                }
            },
            scales: {
                x: {
                    type: 'linear',
                    position: 'top',
                    offset: true,
                    ticks: {
                        callback: (value) => ['Пон', 'Вт', 'Ср', 'Чт', 'Пят', 'Суб', 'Вос'][value],
                        stepSize: 1,
                    },
                    grid: {
                        display: false,
                        drawBorder: false,
                    },
                },
                y: {
                    type: 'linear',
                    ticks: {
                        stepSize: 1,
                        callback: (value) => `${value + 1}`
                    },
                    offset: true,
                    grid: {
                        display: false,
                        drawBorder: false,
                    }
                }
            },
            layout: {
                padding: {
                    top: 20, // Отступ сверху
                    left: 0,
                    right: 0,
                    bottom: 0
                }
            }
        }
    });

    $('.favorite-slider').slick({
        centerMode: true,
        centerPadding: '60px',
        slidesToShow: 3,
        responsive: [
            {
                breakpoint: 768,
                settings: {
                    arrows: false,
                    centerMode: true,
                    centerPadding: '40px',
                    slidesToShow: 3
                }
            },
            {
                breakpoint: 480,
                settings: {
                    arrows: false,
                    centerMode: true,
                    centerPadding: '40px',
                    slidesToShow: 1
                }
            }
        ]
    });
</script>

<style>
    #calendarChart {
        max-width: 700px;
        margin: 0 auto;
    }

    h2 {
        font-family: 'Poppins', sans-serif;
        font-weight: 600;
        font-size: 2.5rem;
        color: #6A0dad; /* Основной цвет вашего сайта */
        text-transform: uppercase;
        letter-spacing: 2px;
        margin-bottom: 30px;
        position: relative;
        display: inline-block;
    }

    h2::after {
        content: '';
        position: absolute;
        width: 120%; /* Увеличена до 120% */
        height: 4px;
        background-color: #9B59b6; /* Второстепенный цвет */
        bottom: -10px;
        left: -10%; /* Сдвинута влево на 10% */
        border-radius: 2px;
    }

    .favorite-slider {
        width: 80%;
        margin: 0 auto;
    }

    .slider-item {
        text-align: center;
        padding: 20px;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 100%;
        min-height: 250px;
    }

    .slider-item img {
        margin: 0 auto;
        border-radius: 10px;
        margin-bottom: 10px;
    }

    .slider-item h5 {
        font-size: 1.2rem;
        color: #4B0082;
    }

    .slider-item p {
        color: #555;
        font-size: 0.9rem;
    }

    /* Slick Slider */
    .slick-prev:before,
    .slick-next:before {
        color: #4B0082; /* Цвет стрелок слайдера */
    }
</style>