@using Newtonsoft.Json
@model Note2Book.ViewModels.ChapterViewModel

<div class="chapter-reading">
    <div class="title-container">
        <h2>@Model.Chapter.Title</h2>
        <a href="@Url.Action("Book", "Book", new { id = Model.Chapter.Book.Id })" class="btn btn-info return-btn">Вернуться к книге</a>
    </div>

    @if (!string.IsNullOrEmpty(Model.PageText))
    {
    <div id="chapterContent">
        @* Разбиваем текст на абзацы *@
        @{
        var textWithQuotes = Model.PageText.Replace("\n", "</p><p>");
        foreach (var quote in Model.Citations)
        {
        // Заменяем цитаты на кликабельные элементы
        textWithQuotes = textWithQuotes.Replace(quote.Text, $"<span class='highlighted-quote' data-quote-id='{quote.Id}' title='Нажмите, чтобы увидеть комментарий'>{quote.Text}</span>");
        }
        }

        <!-- Выводим измененный текст главы с разбиением на абзацы -->
        <div class="chapter-text" style="margin-bottom: 10px;">
            <p>@Html.Raw(textWithQuotes)</p>
        </div>
    </div>
    }

    <div class="navigation-buttons">
        @if (Model.PreviousChapter != null)
        {
        <a href="@Url.Action("ReadChapter", "Chapter", new { chapterId = Model.PreviousChapter, pageNumber = 1 })"
           class="btn btn-secondary">Предыдущая глава</a>
        }

        @if (Model.CurrentPage > 1)
        {
        <a href="@Url.Action("ReadChapter", "Chapter", new { chapterId = Model.Chapter.Id, pageNumber = Model.CurrentPage - 1 })"
           class="btn btn-primary">Предыдущая страница</a>
        }

        @if (Model.CurrentPage < Model.TotalPages)
        {
        <a href="@Url.Action("ReadChapter", "Chapter", new { chapterId = Model.Chapter.Id, pageNumber = Model.CurrentPage + 1 })"
           class="btn btn-primary">Следующая страница</a>
        }

        @if (Model.NextChapter != null)
        {
        <a href="@Url.Action("ReadChapter", "Chapter", new { chapterId = Model.NextChapter, pageNumber = 1 })"
           class="btn btn-success">Следующая глава</a>
        }
    </div>
</div>

<!-- Модальное окно для добавления новой цитаты -->
<div class="modal" id="citationModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Добавить цитату</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div>
                    <label for="citationText">Цитата:</label>
                    <textarea id="citationText" class="form-control" readonly></textarea>
                </div>
                <div>
                    <label for="citationNote">Комментарий:</label>
                    <textarea id="citationNote" class="form-control"></textarea>
                </div>
                <input type="hidden" id="startPosition">
                <input type="hidden" id="endPosition">
                <input type="hidden" id="chapterId" value="@Model.Chapter.Id">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="saveCitationBtn">Сохранить цитату</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Закрыть</button>
            </div>
        </div>
    </div>
</div>

<!-- Модальное окно для отображения комментария к цитате -->
<div class="modal" id="quoteCommentModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Комментарий к цитате</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p id="quoteCommentText"></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" id="deleteCitationBtn">Удалить цитату</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Закрыть</button>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    $(document).ready(function () {
        let citations = @Html.Raw(JsonConvert.SerializeObject(Model.Citations));

        // Отслеживание выделения текста
        $(".chapter-text").mouseup(function () {
            var selectedText = window.getSelection().toString().trim();
            if (selectedText.length > 0) {
                var selection = window.getSelection();
                var range = selection.getRangeAt(0);
                var start = calculateStartOffset(range);
                var end = calculateEndOffset(range);

                // Проверка на пересечение с существующими цитатами
                var isOverlapping = citations.some(quote => start < quote.End && end > quote.Start);
                if (isOverlapping) {
                    alert('Нельзя создать цитату поверх другой цитаты.');
                    return;
                }
                if (selectedText.includes("\n")) {
                    alert('Нельзя сделать цитату из нескольких абзацев');
                    return;
                }
                
                // Открытие модального окна и заполнение полей
                $('#citationText').val(selectedText);
                $('#startPosition').val(start);
                $('#endPosition').val(end);
                $('#citationModal').modal('show');
            }
        });

        // Функция для вычисления позиции начала выделенного текста относительно всего текста главы
        function calculateStartOffset(range) {
            var content = document.getElementById('chapterContent').innerText;
            return content.indexOf(range.toString());
        }

        // Функция для вычисления позиции конца выделенного текста относительно всего текста главы
        function calculateEndOffset(range) {
            var content = document.getElementById('chapterContent').innerText;
            return content.indexOf(range.toString()) + range.toString().length;
        }

        // Отправка данных цитаты через AJAX
        $('#saveCitationBtn').click(function () {
            var citationData = {
                Text: $('#citationText').val(),
                Comment: $('#citationNote').val(),
                Start: $('#startPosition').val(),
                End: $('#endPosition').val(),
                ChapterId: $('#chapterId').val(),
            };

            $.ajax({
                url: '@Url.Action("Create", "Citation")',
                method: 'POST',
                data: citationData,
                success: function (response) {
                    location.reload();
                },
                error: function (xhr, status, error) {
                    alert('Произошла ошибка при добавлении цитаты.');
                }
            });
        });

        let quoteId;
        // Обработка кликов по цитатам
        $('.highlighted-quote').click(function () {
            quoteId = $(this).data('quote-id');
            var selectedCitation = citations.find(c => c.Id == quoteId);

            if (selectedCitation) {
                $('#quoteCommentText').text(selectedCitation.Comment);
                $('#quoteCommentModal').modal('show');
            }
        });

        // Удаление цитаты
        $('#deleteCitationBtn').click(function () {
            $.ajax({
                url: '@Url.Action("Delete", "Citation")',
                method: 'POST',
                data: { id: quoteId },
                success: function (response) {
                    $('#quoteCommentModal').modal('hide');
                    location.reload();
                    // Обновление текста страницы после удаления цитаты
                    
                },
                error: function () {
                    alert('Произошла ошибка при удалении цитаты.');
                }
            });
        });
    });
    // Закрытие модального окна
    $('.close, .btn-secondary').click(function () {
        $(this).closest('.modal').modal('hide');
    });

</script>

<style>
    .chapter-reading {
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        text-align: justify;
    }

    .title-container {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

    .btn-info.return-btn {
        background-color: #4B0082;
        border: none; 
        color: white;
        text-decoration: none;
        padding: 10px 20px;
        border-radius: 5px;
        transition: background-color 0.3s ease;
    }

    .btn-info.return-btn:hover {
        background-color: #31b0d5;
    }

    .highlighted-quote {
        background-color: rgba(138, 43, 226, 0.3);
        padding: 2px;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.2s ease;
    }

    .highlighted-quote:hover {
        background-color: rgba(138, 43, 226, 0.5);
    }

    

    #quoteCommentModal .modal-body {
        padding: 20px;
    }

    #quoteCommentModal .modal-footer {
        display: flex;
        justify-content: space-between;
    }

    #quoteCommentModal .btn-danger {
        background-color: #d9534f;
        border-color: #d43f3a;
    }

    #quoteCommentModal .btn-danger:hover {
        background-color: #c9302c;
    }

    .navigation-buttons {
        display: flex;
        justify-content: space-between;
        margin-top: 20px;
    }
    .btn-primary {
        background-color: #4B0082; /* Индиго */
        border: none;
        
    }

    .btn-primary:hover {
        background-color: #3A006F; /* Темнее индиго */
        color: white; /* Цвет текста при наведении */
    }

    .btn-success {
        background-color: #6A5ACD; /* Фиолетовый */
        border: none;
    }

    .btn-success:hover {
        background-color: #483D8B; /* Темнее фиолетовый */
        color: white; /* Цвет текста при наведении */
    }

    .btn-secondary {
        background-color: #808080; /* Серый */
        border: none;
    }

    .btn-secondary:hover {
        background-color: #696969; /* Темнее серый */
        color: white; /* Цвет текста при наведении */
    }

    /* Общие стили для модальных окон */
    .modal-content {
        background-color: #f9f9f9;
        border-radius: 8px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    }

    .modal-header {
        background-color: #6c757d;
        color: #fff;
        border-bottom: 1px solid #dee2e6;
    }

    .modal-title {
        font-family: 'Roboto', sans-serif;
        font-size: 1.25rem;
    }

    .modal-body label {
        font-weight: bold;
        color: #343a40;
    }

    .modal-body textarea {
        width: 100%;
        padding: 10px;
        border-radius: 5px;
        border: 1px solid #ced4da;
        font-family: 'Roboto', sans-serif;
        font-size: 1rem;
        resize: none;
    }

    .modal-footer {
        display: flex;
        justify-content: space-between;
        border-top: 1px solid #dee2e6;
        padding: 10px;
    }

    .modal-footer .btn {
        border-radius: 5px;
        font-family: 'Roboto', sans-serif;
        padding: 8px 15px;
        font-size: 1rem;
        transition: background-color 0.3s ease;
    }

    .modal-footer .btn-primary {
        background-color: #8a2be2;
        border: none;
    }

    .modal-footer .btn-primary:hover {
        background-color: #6a1bbd;
    }

    .modal-footer .btn-secondary {
        background-color: #6c757d;
        border: none;
    }

    .modal-footer .btn-secondary:hover {
        background-color: #545b62;
    }

    .modal-footer .btn-danger {
        background-color: #dc3545;
        border: none;
    }

    .modal-footer .btn-danger:hover {
        background-color: #c82333;
    }

    /* Стили для кнопки закрытия модального окна */
    .close {
        background-color: transparent;
        border: none;
        font-size: 1.5rem;
        color: #fff;
        cursor: pointer;
        transition: color 0.2s ease;
    }

    .close:hover {
        color: #f8f9fa;
    }

</style>

