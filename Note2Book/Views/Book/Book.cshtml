@model Note2Book.Models.Book

<div class="book-container">
    <div class="book-details">
        <div class="book-header">
            <div class="book-image-container">
                <img src="@Model.Image" alt="Обложка книги" class="book-image"/>

                <div class="download-buttons">
                    @foreach (var file in Model.Storages)
                    {
                        <a href="/files/books/@file.Url" class="btn btn-download" download="@file.Url">Скачать @file.FileType.ToString()</a>
                    }
                </div>
            </div>

            <div class="book-info">
                <h1>@Model.Title</h1>
                <h3>Описание</h3>
                <p>@Model.Description</p>

                <h4>Автор</h4>
                <p>@Model.Author.Name @Model.Author.LastName</p>

                <h4>Жанры</h4>
                <ul>
                    @if (Model.Genres.Any())
                    {
                    @foreach (var genre in Model.Genres)
                    {
                    <li>@genre.Title</li>
                    }
                    }
                </ul>

                <h4>Главы</h4>
                <div class="chapters">
                    @if (Model.Chapters.Any())
                    {
                    @foreach (var chapter in Model.Chapters)
                    {
                    <div class="chapter-item">
                        <span>@chapter.Title</span>
                        <a href="@Url.Action("ReadChapter", "Chapter", new { chapterId = chapter.Id, pageNumber = 1 })"
                           class="btn btn-primary">Читать</a>
                    </div>
                    }
                    }
                </div>

                <h5>Дата создания: @Model?.CreateAt.ToShortDateString()</h5>

                <div class="book-container">
                    <div class="book-details">
                        <!-- Информация о книге и комментариях -->

                        <!-- Форма для добавления комментария -->
                        @if (User.Identity.IsAuthenticated)
                        {
                            <div class="comment-form">
                                @Html.AntiForgeryToken() <!-- Вставляет CSRF-токен -->
                                <h4>Оставить комментарий</h4>
                                <textarea id="commentText" placeholder="Напишите ваш комментарий..." rows="4"></textarea>
                                <button id="submitComment" class="btn btn-primary">Отправить</button>
                            </div>
                        }

                        <div class="book-comments">
                            <h4>Комментарии</h4>
                            @if (Model.Comments.Any())
                            {
                            foreach (var comment in Model.Comments)
                            {
                            <div class="comment-item">
                                <p><strong>@comment.Author.Login</strong> (@comment.CreatedAt.ToShortDateString()):</p>
                                <p>@comment.Text</p>
                            </div>
                            }
                            }
                            else
                            {
                            <p>Комментариев пока нет.</p>
                            }
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

<style>
    body {
        background-color: #F0F4F8;
        font-family: 'Nunito', sans-serif;
        color: #333;
        margin: 0;
        padding: 0;
    }

    .book-container {
        display: flex;
        justify-content: center;
        padding: 20px;
    }

    .book-details {
        width: 100%;
        max-width: 1200px;
        background-color: #ffffff;
        border-radius: 12px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        padding: 40px; /* Увеличен padding для всего блока */
    }

    .book-header {
        width: 100%;
        margin-bottom: 40px; /* Увеличено расстояние внизу блока */
        display: flex;
        align-items: flex-start;
    }

    .book-image-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        margin-right: 40px; /* Увеличен отступ между изображением и текстом */
    }

    .book-image {
        width: 250px;
        height: auto;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px; /* Добавлен отступ снизу от картинки */
    }

    .download-buttons {
        display: flex;
        flex-direction: column;
        gap: 20px; /* Увеличено расстояние между кнопками */
        margin-top: 20px; /* Увеличен отступ сверху для кнопок */
        width: 100%;
    }

    .btn-download {
        background-color: #FF4500;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 8px;
        width: 100%;
        text-align: center;
        font-size: 0.9rem;
        transition: background-color 0.3s ease, transform 0.2s ease;
    }

    .btn-download:hover {
        background-color: #E03A00;
        transform: scale(1.05);
    }

    .book-info {
        flex: 1;
        width: auto;
    }

    .book-info h1 {
        color: #4B0082;
        font-family: 'Poppins', sans-serif;
        font-size: 2.5rem;
        margin-bottom: 20px;
    }

    .book-info h3, .book-info h4, .book-info h5 {
        color: #4B0082;
        margin-top: 20px;
        font-family: 'Poppins', sans-serif;
    }

    .book-info ul {
        list-style: disc;
        margin-left: 20px;
    }

    .chapters {
        display: flex;
        flex-direction: column;
        gap: 10px;
        margin-top: 20px;
    }

    .chapter-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        background-color: #f9f9f9;
        padding: 10px;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .chapter-item span {
        flex: 1;
        font-size: 1rem;
        color: #333;
    }

    .btn-primary {
        background-color: #4B0082;
        color: white;
        border: none;
        padding: 8px 16px;
        border-radius: 8px;
        transition: background-color 0.3s ease, transform 0.2s ease;
        font-size: 0.9rem;
        text-align: center;
        text-decoration: none;
        display: inline-block;
    }

    .btn-primary:hover {
        background-color: #6a0dad;
        transform: scale(1.05);
    }

    .book-comments {
        margin-top: 40px;
        padding: 20px;
        background-color: #f5f5f5;
        border-radius: 10px;
    }

    .comment-item {
        margin-bottom: 20px;
        padding-bottom: 10px;
        border-bottom: 1px solid #ddd;
    }

    .comment-item p {
        margin: 5px 0;
    }

    .comment-form {
        margin-top: 20px;
    }

    .comment-form textarea {
        width: 100%;
        padding: 10px;
        border-radius: 8px;
        border: 1px solid #ccc;
        margin-bottom: 10px;
    }

    .comment-form button {
        background-color: #4B0082;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 8px;
        font-size: 1rem;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .comment-form button:hover {
        background-color: #6a0dad;
    }
</style>

<script>
    document.getElementById('submitComment').addEventListener('click', function () {
        const commentText = document.getElementById('commentText').value;
        const bookId = @Model.Id;
        console.log(bookId);

        if (commentText.trim() === "") {
            alert("Комментарий не может быть пустым.");
            return;
        }

        $.ajax({
            url: '@Url.Action("AddComment", "Comment")',  // URL к вашему методу
            type: 'POST',
            data: { bookId: bookId, commentText: commentText },  // Отправляем bookId
            xhrFields: {
                withCredentials: true  // Обеспечиваем передачу сессионных данных
            },
            success: function (response) {
                location.reload();
            },
            error: function () {
                alert("Произошла ошибка при добавлении книги в избранное.");
            }
        });
    });
</script>
